return {

   -- File manager:
    {
      "nvim-tree/nvim-tree.lua",
      dependencies = {
        "nvim-tree/nvim-web-devicons",
      },
      lazy = false,
      config = function()
        require("nvim-tree").setup {
          sync_root_with_cwd = true,
          actions = {
            open_file = {
              quit_on_open = true,
            },
          },
        }
      end,
    },
    
   -- Markdown Utils:
    {
       "toppair/peek.nvim",
       build = "deno task --quiet build:fast",
       config = function ()
         vim.api.nvim_create_user_command('PeekOpen', require('peek').open, {})
         vim.api.nvim_create_user_command('PeekClose', require('peek').close, {})
       end,
    },

  -- Language Tools:

    {
      "nvim-treesitter/nvim-treesitter",
      -- commit = "fd4525fd9e61950520cea4737abc1800ad4aabb",
      build = ":TSUpdate",
      config = function()
        require("nvim-treesitter.configs").setup {
          ensure_installed = { "c", "lua", "rust", "go", "markdown", "markdown_inline" },
          auto_install = true,
          highlight = {
            enable = true,
            disable = function(lang, buf)
              local max_filesize = 100 * 1024 -- 100 KB
              local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
              if ok and stats and stats.size > max_filesize then
                return true
              end
            end,
          },
        }
      end,
    },

    {
      "hrsh7th/nvim-cmp",
      "hrsh7th/cmp-nvim-lsp",
      "hrsh7th/cmp-buffer",
      "hrsh7th/cmp-path",
      "hrsh7th/cmp-cmdline",
      "hrsh7th/nvim-cmp",
      "hrsh7th/cmp-nvim-lsp-signature-help",
      "L3MON4D3/LuaSnip",
      "saadparwaiz1/cmp_luasnip",
      "rafamadriz/friendly-snippets",
    }

    {
      "williamboman/mason.nvim",
      dependencies = {
        "williamboman/mason-lspconfig.nvim",
        "neovim/nvim-lspconfig",
      },
    },

  -- Debugging
    "mfussenegger/nvim-dap",
    {
      "rcarriga/nvim-dap-ui",
      dependencies = { "mfussenegger/nvim-dap" },
      config = function()
        require("dapui").setup()
      end,
    },
    {
      "leoluz/nvim-dap-go",
      config = function()
        require("dap-go").setup()
      end,
    }, 


